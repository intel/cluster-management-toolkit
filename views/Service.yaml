---
kind: "Service"
default_command: "services"
command:
  - "svcs"
  - "svc"
listview:
  name: "Services"
  group: "Core"
  field_indexes:
    Wide:
      fields: ["namespace", "name", "svc_type", "cluster_ips",
               "external_ips", "ports_svc", "age"]
      sortcolumn: "namespace"
    Normal:
      fields: ["namespace", "name", "svc_type", "cluster_ips",
               "external_ips", "ports_svc_compact", "age"]
      sortcolumn: "namespace"
  fields:
    cluster_ips:
      header: "Cluster-IPs:"
      paths:
        - path: ["spec#clusterIPs", "spec#clusterIP"]
          pathtype: "list"
          default: "<none>"
          none_str_as_none: true
      formatter: "address"
    external_ips:
      header: "External-IPs:"
      paths:
        - path: "spec#externalIPs"
          pathtype: "list"
          default: "<none>"
          none_str_as_none: true
      formatter: "address"
    svc_type:
      header: "Type:"
      path: "spec#type"
      type: "str"
    ports_svc:
      header: "Ports:"
      paths:
        - path: "spec#ports"
          pathtype: "items"
          subpaths:
            - "name"
            - "port"
            - "protocol"
          type: "raw"
      formatter: "list"
      formatting:
        field_colors:
          - type: "service"
          - type: "port"
          - type: "protocol"
        field_separators:
          - type: "port"
          - type: "service"
    ports_svc_compact:
      header: "Ports:"
      paths:
        - path: "spec#ports"
          pathtype: "items"
          subpaths:
            - "port"
            - "protocol"
          type: "raw"
      formatter: "list"
      formatting:
        field_colors:
          - type: "port"
          - type: "protocol"
        field_separators:
          - type: "service"
        ellipsise: 3
  actions:
    actionlist:
      "Delete resource":
        description: "Delete resource"
        category: "Resource Level"
        confirm: true
        actionfunc: "delete_resource"
infoview:
  name: "Service Info"
  infopad:
    row_indexes:
      Normal:
        fields: ["controller", "external_name", "selector", "endpoints",
                 "endpoint_slices", "type", "allocate_node_balancer_node_ports",
                 "cluster_ips", "external_traffic_policy",
                 "internal_traffic_policy", "ip_families", "ip_family_policy",
                 "external_ips", "ports", "topology_keys",
                 "session_affinity_header", "session_affinity",
                 "session_affinity_timeout"]
    rows:
      allocate_node_balancer_node_ports:
        header: [["Allocate Node Balancer Node Ports:", ["main", "infoheader"]]]
        path: "spec#allocateLoadBalancerNodePorts"
        type: "bool"
      cluster_ips:
        header: [["Cluster IPs:", ["main", "infoheader"]]]
        paths:
          - path: ["spec#clusterIPs", "spec#clusterIP"]
            pathtype: "list"
            default: "<none>"
            none_str_as_none: true
        formatter: "address"
      controller:
        header: [["C", ["main", "infoheader_shortcut"]],
                 ["ontroller:", ["main", "infoheader"]]]
        paths:
          - path: "metadata#ownerReferences"
            pathtype: "items"
            subpaths:
              - "kind"
              - "apiVersion"
              - "name"
            when:
              - key: "controller"
                eq: true
            type: ["kind", "api_group", "name"]
        default: "<none>"
        formatter: "list"
        formatting:
          field_colors:
            - type: "kind"
            - type: "api_group"
            - type: "generic"
          field_separators:
            - type: "kind_api_group"
            - type: "kind"
      endpoints:
        header: [["E", ["main", "infoheader_shortcut"]],
                 ["ndpoints:", ["main", "infoheader"]]]
        paths:
          - path: [["metadata#namespace"], ["metadata#name"]]
            pathtype: "tuple"
        formatter: "list"
        formatting:
          field_colors:
            - type: "namespace"
            - type: "generic"
          field_separators:
            - type: "namespace"
      endpoint_slices:
        header: [["Endpoint ", ["main", "infoheader"]],
                 ["S", ["main", "infoheader_shortcut"]],
                 ["lices:", ["main", "infoheader"]]]
        paths:
          - path: ["EndpointSlice", "discovery.k8s.io",
                   ["metadata#namespace"], "",
                   [["kubernetes.io/service-name=", ["metadata#name"]]]]
            pathtype: "lookup"
            subpaths:
              - "metadata#namespace"
              - "metadata#name"
        formatter: "list"
        formatting:
          field_colors:
            - type: "namespace"
            - type: "generic"
          field_separators:
            - type: "namespace"
      external_ips:
        header: [["External IPs:", ["main", "infoheader"]]]
        path: "spec#externalIPs"
        type: "raw"
        default: "<none>"
        formatter: "address"
      external_name:
        header: [["External Name:", ["main", "infoheader"]]]
        path: "spec#externalName"
        type: "str"
        default: "<unset>"
      external_traffic_policy:
        header: [["External Traffic Policy:", ["main", "infoheader"]]]
        path: "spec#externalTrafficPolicy"
        type: "str"
      internal_traffic_policy:
        header: [["Internal Traffic Policy:", ["main", "infoheader"]]]
        path: "spec#internalTrafficPolicy"
        type: "str"
      ip_families:
        header: [["IP Families:", ["main", "infoheader"]]]
        path: "spec#ipFamilies"
        type: "raw"
        formatter: "list"
      ip_family_policy:
        header: [["IP Family Policy:", ["main", "infoheader"]]]
        path: "spec#ipFamilyPolicy"
        type: "str"
      ports:
        header: [["P", ["main", "infoheader_shortcut"]],
                 ["orts:", ["main", "infoheader"]]]
        paths:
          - path: "spec#ports"
            pathtype: "items"
            subpaths:
              - "name"
              - "port"
              - "protocol"
            type: "raw"
        formatter: "list"
        formatting:
          field_colors:
            - type: "service"
            - type: "port"
            - type: "protocol"
          field_separators:
            - type: "port"
            - type: "service"
      selector:
        header: [["Selector:", ["main", "infoheader"]]]
        paths:
          - path: ["spec#selector"]
            pathtype: "key_value"
            default: ["<none>"]
        formatter: "list"
        formatting:
          field_colors:
            - type: "key"
            - type: "value"
          field_separators:
            - type: "selector"
      session_affinity:
        header: [["  Affinity:", ["main", "infoheader"]]]
        path: "spec#sessionAffinity"
        type: "str"
      session_affinity_header:
        header: [["Session:", ["main", "infoheader"]]]
      session_affinity_timeout:
        header: [["  Timeout:", ["main", "infoheader"]]]
        path: "spec#sessionAffinityConfig#clientIP#timeoutSeconds"
        default: "<none>"
        type: "int"
        formatter: "numerical"
        formatting:
          unit: "s"
      topology_keys:
        header: [["Topology Keys:", ["main", "infoheader"]]]
        path: "spec#topologyKeys"
        type: "raw"
        default: "<unset>"
        formatter: "list"
        formatting:
          mapping:
            mappings:
              "<unset>":
                field_colors:
                  - context: "types"
                    type: "unset"
              __default:
                field_colors:
                  - context: "types"
                    type: "generic"
      type:
        header: [["Type:", ["main", "infoheader"]]]
        path: "spec#type"
        type: "str"
  listpad:
    listgetter: "generic_listgetter"
    listgetter_args:
      _kind: "Pod"
      _label_selector_path: "spec#selector"
      _none_on_empty_selector: true
    infogetter: "generic_infogetter"
    on_activation:
      call: "resourceinfodispatch"
      kind: "Pod"
    field_indexes:
      Wide:
        fields: ["namespace", "name", "pod_status", "node_name",
                 "pod_ip", "age", "restarts", "last_restart", "containers"]
        sortcolumn: "pod_status"
      Normal:
        fields: ["namespace", "name", "pod_status", "node_name", "age",
                 "restarts", "last_restart"]
        sortcolumn: "pod_status"
      Compact:
        fields: ["namespace", "name", "pod_status", "age",
                 "restarts", "last_restart"]
        sortcolumn: "pod_status"
    fields:
      containers:
        header: "Containers:"
        paths:
          - paths:
              - "spec#initContainers"
              - "spec#containers"
            pathtype: "items"
            subpaths:
              - "name"
              - subpath: "image"
                regex: ["^.+/[^:^/]+:(.+?)@.*", "^.+/[^:^/]+:(.+)"]
            type: "raw"
        formatter: "list"
        formatting:
          field_colors:
            - type: "generic"
            - type: "version"
          field_separators:
            - type: "version"
      last_restart:
        header: "Latest Restart:"
        paths:
          - path: "status#containerStatuses"
            pathtype: "items"
            subpath: ["state#running#startedAt",
                      "lastState#terminated#finishedAt"]
            when:
              - key: "restartCount"
                gt: 0
            action: "latest"
            type: "timestamp"
        default: -1
        formatter: "age"
        align: "right"
      node_name:
        header: "Node:"
        path: "spec#nodeName"
        type: "host"
        default: "<none>"
        formatting:
          field_colors:
            - type: "host"
      pod_ip:
        header: "Pod IP:"
        path: "status#podIP"
        default: "<unset>"
        type: "address"
        formatter: "address"
      restarts:
        header: "Restarts:"
        paths:
          - path: "status#containerStatuses"
            pathtype: "items"
            subpath: "restartCount"
            action: "sum"
            type: "int"
        default: 0
        formatter: "numerical"
        align: "right"
  shortcuts:
    "Endpoints":
      key: "e"
      modifier: "shift"
      read_only: true
      helptext: "Open info page for Endpoints"
      action: "call"
      action_call: "resourceinfodispatch_with_lookup"
      action_args:
        _pass_obj: true
        kind: "Endpoints"
        name_path: "metadata#name"
        namespace_path: "metadata#namespace"
    "Endpoint Slices":
      key: "s"
      modifier: "shift"
      read_only: true
      helptext: "List Endpoint Slices"
      widget: "windowwidget"
      title: "Endpoint Slices:"
      headers: ["Namespace:", "Name:"]
      itemgetter: "get_kubernetes_objects"
      itemgetter_args:
        kind: "EndpointSlice"
        api_family: "discovery.k8s.io"
        selector: "kubernetes.io/service-name"
        selector_type: "label"
        name_path: "metadata#name"
        namespace_path: "metadata#namespace"
        field_paths: ["metadata#namespace", "metadata#name"]
      # This isn't supported for now
      sortcolumn: "namespace"
      selectable: true
      action: "call"
      action_call: "resourceinfodispatch_with_lookup"
      action_args:
        kind: "EndpointSlice"
        api_family: "discovery.k8s.io"
        name_path: "metadata#name"
        namespace_path: "metadata#namespace"
    "Open controller":
      key: "c"
      modifier: "shift"
      read_only: true
      helptext: "Open info page for controller"
      action: "call"
      action_call: "resourceinfodispatch_with_lookup"
      action_args:
        _pass_obj: true
        namespace_path: "metadata#namespace"
        owner_reference_path: "metadata#ownerReferences"
    "Ports":
      key: "p"
      modifier: "shift"
      read_only: true
      helptext: "Show port mappings"
      widget: "windowwidget"
      headers: ["Port:", "Node-Port:", "Target-Port:", "Endpoints:"]
      itemgetter: "get_svc_port_target_endpoints"
      # This isn't supported for now
      sortcolumn: "port"
