---
kind: "Agent"
api_family: "agent.k8s.elastic.co"
default_command: "agents"
listview:
  name: "Agents"
  group: "Logging"
  field_indexes:
    Normal:
      fields: ["namespace", "name", "version", "available_nodes",
               "kibana_status", "fleet_server_status", "health", "age"]
      sortcolumn: "namespace"
  fields:
    available_nodes:
      header: "Available Nodes:"
      paths:
        - path: [["status#availableNodes"], ["status#expectedNodes"]]
          pathtype: "tuple"
      formatter: "list"
      formatting:
        field_colors:
          - type: "numerical"
          - type: "numerical"
        item_separator:
          type: "fraction"
      align: "right"
    fleet_server_status:
      header: "Fleet Server Status:"
      path: "status#fleetServerAssociationStatus"
      default: "<unset>"
      type: "str"
      formatter: "value_mapper"
      formatting:
        mapping:
          mappings:
            Established:
              field_colors:
                - context: "main"
                  type: "status_ok"
            Pending:
              field_colors:
                - context: "main"
                  type: "status_pending"
            "<unset>":
              field_colors:
                - context: "types"
                  type: "unset"
    health:
      header: "Health:"
      path: "status#health"
      default: "<unset>"
      type: "str"
      formatter: "value_mapper"
      formatting:
        mapping:
          mappings:
            green:
              field_colors:
                - context: "main"
                  type: "status_ok"
            red:
              field_colors:
                - context: "main"
                  type: "status_not_ok"
            unknown:
              field_colors:
                - context: "main"
                  type: "status_unknown"
            yellow:
              field_colors:
                - context: "main"
                  type: "status_degraded"
            "<unset>":
              field_colors:
                - context: "types"
                  type: "unset"
    kibana_status:
      header: "Kibana Status:"
      path: "status#kibanaAssociationStatus"
      default: "<unset>"
      type: "str"
      formatter: "value_mapper"
      formatting:
        mapping:
          mappings:
            Established:
              field_colors:
                - context: "main"
                  type: "status_ok"
            Pending:
              field_colors:
                - context: "main"
                  type: "status_pending"
            "<unset>":
              field_colors:
                - context: "types"
                  type: "unset"
    version:
      header: "Version:"
      path: "spec#version"
      type: "str"
      formatting:
        field_colors:
          - type: "version"
  actions:
    actionlist:
      "Delete resource":
        description: "Delete resource"
        category: "Resource Level"
        confirm: true
        actionfunc: "delete_resource"
infoview:
  name: "Agent Info"
  infopad:
    row_indexes:
      Normal:
        fields: ["kibana_ref", "fleet_server_ref", "version", "policy_id",
                 "mode", "http_header", "http_service_header",
                 "http_service_type", "http_tls_header",
                 "http_tls_self_signed_header", "http_tls_self_signed_enabled",
                 "http_tls_self_signed_alt_names", "available_nodes",
                 "kibana_status", "fleet_server_status", "health"]
    rows:
      available_nodes:
        header: [["Available Nodes:", ["main", "infoheader"]]]
        paths:
          - path: [["status#availableNodes"], ["status#expectedNodes"]]
            pathtype: "tuple"
        formatter: "list"
        formatting:
          field_colors:
            - type: "numerical"
            - type: "numerical"
          item_separator:
            type: "fraction"
      fleet_server_ref:
        header: [["F", ["main", "infoheader_shortcut"]],
                 ["leet Server Reference:", ["main", "infoheader"]]]
        paths:
          - path: [["spec#fleetServerRef#namespace", "metadata#namespace"],
                   ["spec#fleetServerRef#name"]]
            pathtype: "tuple"
            default: ["<unset>", "<unset>"]
        formatter: "list"
        formatting:
          field_colors:
            - type: "namespace"
            - type: "generic"
          field_separators:
            - type: "namespace"
      fleet_server_status:
        header: [["Fleet Server Status:", ["main", "infoheader"]]]
        path: "status#fleetServerAssociationStatus"
        default: "<unset>"
        type: "str"
        formatter: "value_mapper"
        formatting:
          mapping:
            mappings:
              Established:
                field_colors:
                  - context: "main"
                    type: "status_ok"
              Pending:
                field_colors:
                  - context: "main"
                    type: "status_pending"
              "<unset>":
                field_colors:
                  - context: "types"
                    type: "unset"
      health:
        header: [["Health:", ["main", "infoheader"]]]
        path: "status#health"
        default: "<unset>"
        type: "str"
        formatter: "value_mapper"
        formatting:
          mapping:
            mappings:
              green:
                field_colors:
                  - context: "main"
                    type: "status_ok"
              red:
                field_colors:
                  - context: "main"
                    type: "status_not_ok"
              unknown:
                field_colors:
                  - context: "main"
                    type: "status_unknown"
              yellow:
                field_colors:
                  - context: "main"
                    type: "status_degraded"
              "<unset>":
                field_colors:
                  - context: "types"
                    type: "unset"
      http_header:
        header: [["HTTP:", ["main", "infoheader"]]]
      http_service_header:
        header: [["  Service:", ["main", "infoheader"]]]
      http_service_type:
        header: [["    Type:", ["main", "infoheader"]]]
        path: "spec#http#service#spec#type"
        default: "<unset>"
        type: "str"
      http_tls_header:
        header: [["  TLS:", ["main", "infoheader"]]]
      http_tls_self_signed_alt_names:
        header: [["      Alt Names:", ["main", "infoheader"]]]
        paths:
          - path: "spec#http#tls#selfSignedCertificate#subjectAltNames"
            pathtype: "key_value"
            default: ["<none>"]
        formatter: "list"
        formatting:
          field_colors:
            - type: "key"
            - type: "value"
          field_separators:
            - type: "keyvalue"
      http_tls_self_signed_enabled:
        header: [["      Disabled:", ["main", "infoheader"]]]
        path: "spec#http#tls#selfSignedCertificate#disabled"
        default: "<unset>"
        type: "str"
      http_tls_self_signed_header:
        header: [["    Self-Signed Certificate:", ["main", "infoheader"]]]
      kibana_ref:
        header: [["K", ["main", "infoheader_shortcut"]],
                 ["ibana Reference:", ["main", "infoheader"]]]
        paths:
          - path: [["spec#kibanaRef#namespace", "metadata#namespace"],
                   ["spec#kibanaRef#name"]]
            pathtype: "tuple"
            default: ["<unset>", "<unset>"]
        formatter: "list"
        formatting:
          field_colors:
            - type: "namespace"
            - type: "generic"
          field_separators:
            - type: "namespace"
      kibana_status:
        header: [["Kibana Status:", ["main", "infoheader"]]]
        path: "status#kibanaAssociationStatus"
        default: "<unset>"
        type: "str"
        formatter: "value_mapper"
        formatting:
          mapping:
            mappings:
              Established:
                field_colors:
                  - context: "main"
                    type: "status_ok"
              Pending:
                field_colors:
                  - context: "main"
                    type: "status_pending"
              "<unset>":
                field_colors:
                  - context: "types"
                    type: "unset"
      mode:
        header: [["Mode:", ["main", "infoheader"]]]
        path: "spec#mode"
        type: "str"
      policy_id:
        header: [["Policy ID:", ["main", "infoheader"]]]
        path: "spec#policyID"
        type: "str"
      version:
        header: [["Version:", ["main", "infoheader"]]]
        path: "spec#version"
        type: "str"
        formatting:
          field_colors:
            - type: "version"
  shortcuts:
    "Configuration":
      key: "c"
      modifier: "shift"
      read_only: true
      helptext: "Show configuration"
      action: "call"
      action_call: "view_yaml"
      action_args:
        title: "Configuration"
        _pass_obj: true
        path: "spec#config"
    "List Elasticsearch statuses":
      key: "e"
      modifier: "shift"
      read_only: true
      helptext: "List Elasticsearch statuses"
      widget: "windowwidget"
      title: "Elasticsearch Statuses:"
      headers: ["Namespace:", "Name:", "Status:"]
      itemgetter: "get_dict_list"
      itemgetter_args:
        path: "status#elasticsearchAssociationsStatus"
        fields:
          - field: "key"
            regex: "^([^/]+)/.+"
          - field: "key"
            regex: "^[^/]+/(.+)"
          - "value"
      # This isn't supported for now
      sortcolumn: "namespace"
      selectable: true
      action: "call"
      action_call: "resourceinfodispatch_with_lookup"
      action_args:
        kind: "Elasticsearch"
        api_family: "elasticsearch.k8s.elastic.co"
        name_path: 1
        namespace_path: 0
    "Open Fleet Server":
      key: "F"
      modifier: "shift"
      read_only: true
      helptext: "Open info page for fleet server"
      action: "call"
      action_call: "resourceinfodispatch_with_lookup"
      action_args:
        _pass_obj: true
        kind: "Agent"
        api_family: "agent.k8s.elastic.co"
        namespace_path: ["spec#fleetServerRef#namespace", "metadata#namespace"]
        name_path: "spec#fleetServerRef#name"
    "Open Kibana":
      key: "k"
      modifier: "shift"
      read_only: true
      helptext: "Open info page for Kibana"
      action: "call"
      action_call: "resourceinfodispatch_with_lookup"
      action_args:
        _pass_obj: true
        kind: "Kibana"
        api_family: "kibana.k8s.elastic.co"
        namespace_path: ["spec#kibanaRef#namespace", "metadata#namespace"]
        name_path: "spec#kibanaRef#name"
    "Pod template":
      key: "t"
      modifier: "shift"
      read_only: true
      helptext: "Show Pod template"
      action: "call"
      action_call: "view_yaml"
      action_args:
        title: "Pod template"
        _pass_obj: true
        path: "spec#daemonSet#podTemplate"
