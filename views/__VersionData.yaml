---
kind: "__VersionData"
default_command: "versions"
command:
  - "version"
  - "cv"
listview:
  name: "Version Data"
  group: "Administration"
  listgetter: "listgetter_files"
  listgetter_args:
    # We should call update_version_cache() here
    file_not_found_status: "No version data found"
    skip_empty_paths: true
    paths:
      - filepath: "{HOME}/.cmt/version-cache/candidate_versions.yaml"
        filetype: "yaml"
        path: "cmt"
        pathtype: "dict"
        _extra_data:
          name: "Cluster Management Toolkit"
          installed_version:
            fieldgetter: "fieldgetter_executable_version"
            fieldgetter_args:
              executable: "cmt"
              args: ["version"]
              # yamllint disable-line rule:line-length
              version_regex: '^Cluster Management Toolkit for Kubernetes \(CMT\) (\d+)(\.)(\d+)(\.)(\d+)$'
          file_not_found_status: "No changelog found"
          paths:
            # yamllint disable-line rule:line-length
            - filepath: "{HOME}/.cmt/version-cache/cmt_changelog.md"
              filetype: "text"
              pathtype: "raw"
              substitutions:
                "changelog": "changelog"
          formatter: "markdown"
          formatter_args:
            # First match in the file is what we want
            include_start: true
            include_end: true
            strip_empty_start: true
            strip_empty_end: true
      - filepath: "{HOME}/.cmt/version-cache/candidate_versions.yaml"
        filetype: "yaml"
        path: "crc"
        pathtype: "dict"
        _extra_data:
          name: "CRC"
          installed_version:
            fieldgetter: "fieldgetter_crc_version"
            fieldgetter_args:
              fields:
                - 0
          file_not_found_status: "No changelog found"
          paths:
            - filepath: "{HOME}/.cmt/version-cache/crc_changelog.md"
              filetype: "text"
              pathtype: "raw"
          formatter: "markdown"
      - filepath: "{HOME}/.cmt/version-cache/candidate_versions.yaml"
        filetype: "yaml"
        path: "kubernetes"
        pathtype: "dict"
        _extra_data:
          name: "Kubernetes"
          installed_version:
            fieldgetter: "fieldgetter_api_server_version"
            fieldgetter_args:
              fields:
                - 2
          file_not_found_status: "No changelog found"
          paths:
            # yamllint disable-line rule:line-length
            - filepath: "{HOME}/.cmt/version-cache/kubernetes_current_changelog.md"
              filetype: "text"
              pathtype: "raw"
          formatter: "markdown"
          formatter_args:
            # First match in the file is what we want
            start: "## Changelog since "
            include_start: true
            end: "# v"
            include_end: false
            strip_empty_start: false
            strip_empty_end: true
      - filepath: "{HOME}/.cmt/version-cache/candidate_versions.yaml"
        filetype: "yaml"
        path: "kubevirt"
        pathtype: "dict"
        _extra_data:
          name: "virtctl (KubeVirt)"
          installed_version:
            fieldgetter: "fieldgetter_executable_version"
            fieldgetter_args:
              executable: "/usr/bin/virtctl"
              args: ["version", "--client"]
              version_regex: '^.*GitVersion:"v(\d+)(\.)(\d+)(\.)(\d+)".*$'
          file_not_found_status: "No changelog found"
          paths:
            - filepath: "{HOME}/.cmt/version-cache/kubevirt_changelog.md"
              filetype: "text"
              pathtype: "raw"
          formatter: "markdown"
      - filepath: "{HOME}/.cmt/version-cache/candidate_versions.yaml"
        filetype: "yaml"
        path: "helm"
        pathtype: "dict"
        _extra_data:
          name: "Helm"
          installed_version:
            fieldgetter: "fieldgetter_executable_version"
            fieldgetter_args:
              executable: "/usr/bin/helm"
              args: ["version"]
              # yamllint disable-line rule:line-length
              version_regex: '^version.BuildInfo{Version:"v(\d+)(\.)(\d+)(\.)(\d+)".*'
          file_not_found_status: "No changelog found"
          paths:
            - filepath: "{HOME}/.cmt/version-cache/helm_changelog.md"
              filetype: "text"
              pathtype: "raw"
          formatter: "markdown"
      - filepath: "{HOME}/.cmt/version-cache/candidate_versions.yaml"
        filetype: "yaml"
        path: "antctl"
        pathtype: "dict"
        _extra_data:
          name: "antctl (Antrea)"
          installed_version:
            fieldgetter: "fieldgetter_executable_version"
            fieldgetter_args:
              executable: "/usr/bin/antctl"
              args: ["version"]
              version_regex: '^antctlVersion: v(\d+)(\.)(\d+)(\.)(\d+)'
          file_not_found_status: "No changelog found"
          paths:
            - filepath: "{HOME}/.cmt/version-cache/antrea_changelog.md"
              filetype: "text"
              pathtype: "raw"
          formatter: "markdown"
      - filepath: "{HOME}/.cmt/version-cache/candidate_versions.yaml"
        filetype: "yaml"
        path: "calicoctl"
        pathtype: "dict"
        _extra_data:
          name: "calicoctl (Calico)"
          installed_version:
            fieldgetter: "fieldgetter_executable_version"
            fieldgetter_args:
              executable: "/usr/bin/calicoctl"
              args: ["version"]
              version_regex: '^Client Version:\s+v(\d+)(\.)(\d+)(\.)(\d+)'
          file_not_found_status: "No changelog found"
          paths:
            - filepath: "{HOME}/.cmt/version-cache/calico_changelog.md"
              filetype: "text"
              pathtype: "raw"
          formatter: "markdown"
      - filepath: "{HOME}/.cmt/version-cache/candidate_versions.yaml"
        filetype: "yaml"
        path: "cilium-cli"
        pathtype: "dict"
        _extra_data:
          name: "cilium-cli (Cilium)"
          installed_version:
            fieldgetter: "fieldgetter_executable_version"
            fieldgetter_args:
              executable: "/usr/bin/cilium"
              args: ["version"]
              version_regex: '^cilium-cli:\s+v(\d+)(\.)(\d+)(\.)(\d+).*'
          file_not_found_status: "No changelog found"
          paths:
            - filepath: "{HOME}/.cmt/version-cache/cilium_changelog.md"
              filetype: "text"
              pathtype: "raw"
          formatter: "markdown"
      - filepath: "{HOME}/.cmt/version-cache/candidate_versions.yaml"
        filetype: "yaml"
        path: "argocd"
        pathtype: "dict"
        _extra_data:
          name: "argocd (Argo CD)"
          installed_version:
            fieldgetter: "fieldgetter_executable_version"
            fieldgetter_args:
              executable: "/usr/bin/argocd"
              args: ["version"]
              version_regex: '^argocd: v(\d+)(\.)(\d+)(\.)(\d+)\+.*|$'
          file_not_found_status: "No changelog found"
          paths:
            - filepath: "{HOME}/.cmt/version-cache/argocd_changelog.md"
              filetype: "text"
              pathtype: "raw"
          formatter: "markdown"
      - filepath: "{HOME}/.cmt/version-cache/candidate_versions.yaml"
        filetype: "yaml"
        path: "kargo"
        pathtype: "dict"
        _extra_data:
          name: "kargo (Kargo)"
          installed_version:
            fieldgetter: "fieldgetter_executable_version"
            fieldgetter_args:
              executable: "/usr/bin/kargo"
              args: ["version"]
              version_regex: '^Client Version: v(\d+)(\.)(\d+)(\.)(\d+)'
          file_not_found_status: "No changelog found"
          paths:
            - filepath: "{HOME}/.cmt/version-cache/kargo_changelog.md"
              filetype: "text"
              pathtype: "raw"
          formatter: "markdown"
      - filepath: "{HOME}/.cmt/version-cache/candidate_versions.yaml"
        filetype: "yaml"
        path: "kueuectl"
        pathtype: "dict"
        _extra_data:
          name: "kueuectl (Kueue)"
          installed_version:
            fieldgetter: "fieldgetter_executable_version"
            fieldgetter_args:
              executable: "/usr/bin/kueuectl"
              args: ["version"]
              version_regex: '^Client Version: v(\d+)(\.)(\d+)(\.)(\d+)'
          file_not_found_status: "No changelog found"
          paths:
            - filepath: "{HOME}/.cmt/version-cache/kueue_changelog.md"
              filetype: "text"
              pathtype: "raw"
          formatter: "markdown"
      - filepath: "{HOME}/.cmt/version-cache/candidate_versions.yaml"
        filetype: "yaml"
        path: "kustomize"
        pathtype: "dict"
        _extra_data:
          name: "kustomize"
          installed_version:
            fieldgetter: "fieldgetter_executable_version"
            fieldgetter_args:
              executable: "/usr/bin/kustomize"
              args: ["version"]
              version_regex: '^v(\d+)(\.)(\d+)(\.)(\d+)'
          file_not_found_status: "No changelog found"
          paths:
            - filepath: "{HOME}/.cmt/version-cache/kustomize_changelog.md"
              filetype: "text"
              pathtype: "raw"
          formatter: "markdown"
      - filepath: "{HOME}/.cmt/version-cache/candidate_versions.yaml"
        filetype: "yaml"
        path: "k3s"
        pathtype: "dict"
        _extra_data:
          name: "k3s"
          installed_version:
            fieldgetter: "fieldgetter_executable_version"
            fieldgetter_args:
              executable: "/usr/local/bin/k3s"
              args: ["--version"]
              # yamllint disable-line rule:line-length
              version_regex: '^k3s version v(\d+)(\.)(\d+)(\.)(\d+)(\+)([a-z0-9]+).*'
          file_not_found_status: "No changelog found"
          paths:
            - filepath: "{HOME}/.cmt/version-cache/k3s_changelog.md"
              filetype: "text"
              pathtype: "raw"
          formatter: "markdown"
      - filepath: "{HOME}/.cmt/version-cache/candidate_versions.yaml"
        filetype: "yaml"
        path: "cmctl"
        pathtype: "dict"
        _extra_data:
          name: "cmctl (cert-manager)"
          installed_version:
            fieldgetter: "fieldgetter_executable_version"
            fieldgetter_args:
              executable: "/usr/bin/cmctl"
              args: ["version", "--client"]
              version_regex: '^.*GitVersion:"v(\d+)(\.)(\d+)(\.)(\d+)".*$'
          file_not_found_status: "No changelog found"
          paths:
            - filepath: "{HOME}/.cmt/version-cache/cert-manager_changelog.md"
              filetype: "text"
              pathtype: "raw"
          formatter: "markdown"
      - filepath: "{HOME}/.cmt/version-cache/candidate_versions.yaml"
        filetype: "yaml"
        path: "rke2"
        pathtype: "dict"
        _extra_data:
          name: "RKE2"
          installed_version:
            fieldgetter: "fieldgetter_executable_version"
            fieldgetter_args:
              executable: "/usr/local/bin/rke2"
              args: ["--version"]
              # yamllint disable-line rule:line-length
              version_regex: '^rke2 version v(\d+)(\.)(\d+)(\.)(\d+)(\+)([a-z0-9]+).*'
          file_not_found_status: "No changelog found"
          paths:
            - filepath: "{HOME}/.cmt/version-cache/rke2_changelog.md"
              filetype: "text"
              pathtype: "raw"
          formatter: "markdown"
      - filepath: "{HOME}/.cmt/version-cache/candidate_versions.yaml"
        filetype: "yaml"
        path: "cmctl"
        pathtype: "dict"
        _extra_data:
          name: "cmctl (cert-manager)"
          installed_version:
            fieldgetter: "fieldgetter_executable_version"
            fieldgetter_args:
              executable: "/usr/bin/cmctl"
              args: ["version", "--client"]
              version_regex: '^.*GitVersion:"v(\d+)(\.)(\d+)(\.)(\d+)".*$'
          file_not_found_status: "No changelog found"
          paths:
            - filepath: "{HOME}/.cmt/version-cache/cert-manager_changelog.md"
              filetype: "text"
              pathtype: "raw"
          formatter: "markdown"
  infogetter: "generic_infogetter"
  field_indexes:
    Normal:
      fields: ["name", "installed_version", "latest_version",
               "release_date", "last_checked", "note"]
      sortcolumn: "name"
  labels: null
  fields:
    installed_version:
      header: "Current Version:"
      paths:
        - path: "_extra_data#installed_version"
          pathtype: "fieldgetter"
      type: "version"
    latest_version:
      header: "Latest Version:"
      path: "release"
      type: "version"
    last_checked:
      header: "Last Checked:"
      path: "_extra_data#mtime"
      type: "unix_timestamp"
      default: -1
      formatter: "timestamp"
    name:
      header: "Component:"
      path: "_extra_data#name"
      type: "str"
    note:
      header: "Note:"
      path: "note"
      type: "str"
    release_date:
      header: "Release Date:"
      paths:
        - path: "release_date"
          pathtype: "str"
      type: "str"
      formatter: "timestamp"
  listview_args:
    filters:
      uninstalled:
        source: "caller"
        enabled: true
        block:
          - key: "installed_version"
            values: [""]
  shortcuts:
    # Overrides:
    "Edit resource": null
    "Show Uninstalled Components":
      key: "u"
      modifier: "shift"
      read_only: true
      helptext: "Show / Hide uninstalled components"
      action: "toggle_var"
      action_args:
        var: "filters#uninstalled#enabled"
      force_update: true
  statusmsg:
    - ["Hide uninstalled components: ", ["var", "filters#uninstalled#enabled"]]
infoview:
  name: "Version Info"
  infopad:
    name_path: "_extra_data#name"
    namespace_path: null
    creation_timestamp_path: null
    row_indexes:
      Normal:
        fields: ["installed_version", "latest_version",
                 "release_date", "note", "mtime"]
    rows:
      installed_version:
        header: [["Installed Version:", ["main", "infoheader"]]]
        paths:
          - path: "_extra_data#installed_version"
            pathtype: "fieldgetter"
        type: "version"
      latest_version:
        header: [["Latest Version:", ["main", "infoheader"]]]
        path: "release"
        type: "version"
      mtime:
        header: [["Last Checked:", ["main", "infoheader"]]]
        path: "_extra_data#mtime"
        type: "unix_timestamp"
        default: -1
        formatter: "timestamp"
      note:
        header: [["Note:", ["main", "infoheader"]]]
        path: "note"
        type: "str"
      release_date:
        header: [["Release Date:", ["main", "infoheader"]]]
        paths:
          - path: ["targetDate", "release_date"]
            pathtype: "str"
        type: "str"
        formatter: "timestamp"
  logpad:
    # We cannot get the changelog in the previous infogetter,
    # since we don't have the latest version at that point
    infogetter: "logpad_files"
    infogetter_args:
      _pass_obj: true
      extra_values_lookup:
        "version": ["release"]
        "_extra_data": ["_extra_data"]
    timestamps: false
  shortcuts:
    # __VersionData has no last applied configuration or events
    "Show Events": null
    "Last Applied Configuration": null
