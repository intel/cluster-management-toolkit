kind: Secret
default_command: secrets
command:
- sec
listview:
  name: Secrets
  group: Core
  field_indexes:
    Normal: [namespace, name, secret_type, data, immutable, age]
  sortcolumn: namespace
  fields:
    data:
      header: "# of Data:"
      path: "data"
      type: len
      formatting:
        field_colors:
        - type: numerical
      align: right
    immutable:
      header: "Immutable:"
      paths:
      - path: immutable
        pathtype: value
        type: bool
        default: ""
    secret_type:
      header: "Type:"
      paths:
      - path: type
        pathtype: value
        type: regex_to_tuples
        regex: "^(.*?)/(.*)|()(.*)"
      type: list
      formatter: list
      formatting:
        field_colors:
        - type: secret_type
        - type: generic
        field_separators:
        - type: secret_type
infoview:
  name: Secret Info
  infopad:
    row_indexes:
      Normal: [type]
    rows:
      type:
        header: [["Type:", [main, infoheader]]]
        paths:
        - path: type
          pathtype: value
          type: regex_to_tuples
          regex: "^(.*?)/(.*)|()(.*)"
        type: list
        formatter: list
        formatting:
          field_colors:
          - type: secret_type
          - type: generic
          field_separators:
          - type: secret_type
  listpad:
    path: data
    infogetter: get_key_value_info
    field_indexes:
      Normal: [key, vtype, vlen, decoded_value]
    sortcolumn: key
    fields:
      decoded_value:
        header: "Value:"
        path: "decoded_value"
        type: str
      key:
        header: "Key:"
        path: "key"
        type: str
      vlen:
        header: "Length:"
        type: int
        align: right
        formatting:
          field_colors:
          - type: numerical
      vtype:
        header: "Type:"
        path: "vtype"
        type: str
  shortcuts:
    "Export":
      key: e
      modifier: shift
      helptext: "Decode and export selected value to a file"
      widget: inputbox
      inputtitle: "Export to file:"
      confirm: "os.path.exists(w_result)"
      confirmtitle: "File already exists; overwrite?:"
      action: call
      action_call: export_data
      action_args:
        _pass_result: true
        _pass_selected: true
    "View":
      key: v
      modifier: shift
      helptext: "Decode and view selected value"
      action: call
      action_call: decode_and_view_data
      action_args:
        _pass_selected: true
