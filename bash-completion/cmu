add_option_if_not_in_list() {
	new_option=$1
	shift
	options=$*

	for option in ${COMP_WORDS[@]}; do
		case "${option}" in
		-*)
			# OK, it's an option; does it match the one we're passing in?
			if [ ${option} = ${new_option} ]; then
				# OK, we found a match and thus we don't add it to options
				printf  -- "${options}"
				return
			fi
			;;
		esac
	done

	printf -- "${options} ${new_option}"
	return
}

_cmu() {
	commands=""

	non_options=0
	skip_optargs=0

	case "${COMP_WORDS[1]}" in
	--help|help|--version|version)
		COMPREPLY=( $(compgen -W "" -- "$2") )
		return
		;;
	esac

	# We will ignore manual mixes of non-options and options
	# and let the command parser whine about that instead
	# 0 programname
	# 1 command
	# 2+ options followed by args
	if [ ${COMP_CWORD} -gt 1 ];  then
		for optind in $(seq 2 $(( COMP_CWORD - 1 ))); do
			if [ ${COMP_CWORD} -eq 2 ]; then
				break
			fi

			if [ ${skip_optargs} -gt 0 ]; then
				skip_optargs=$(( skip_optargs - 1 ))
				continue
			fi

			case "${COMP_WORDS[${optind}]}" in
			--help)
				# No further suggestions
				COMPREPLY=( $(compgen -W "" -- "$2") )
				return
				;;
			--color|--format)
				# These options take 1 argument
				skip_optargs=1
				;;
			*)
				# We didn't match any options, so this has to be an argument
				non_options=$(( non_options + 1 ))
				;;
			esac
		done
	fi

	# command followed by option followed by --help is always valid
	if [ ${COMP_CWORD} -eq 2 ]; then
		commands=$(add_option_if_not_in_list "--help" ${commands})
	fi

	case "$3" in
	--color)
		COMPREPLY=( $(compgen -W "always never" -- "$2") )
		return
		;;
	--format)
		COMPREPLY=( $(compgen -W "csv default entry ssv tsv" -- "$2") )
		return
		;;
	--namespace)
		available_namespaces=$(kubectl get no --no-headers -o custom-columns='NAME:metadata.name' 2> /dev/null)
		COMPREPLY=( $(compgen -W "${available_namespaces}" -- "$2") )
		return
		;;
	esac

	case "${COMP_WORDS[1]}" in
	list-namespaces)
		commands=$(add_option_if_not_in_list "--color" ${commands})
		commands=$(add_option_if_not_in_list "--format" ${commands})
		;;
	list-views)
		;;
	"")
		;;
	*)
		COMPREPLY=( $(compgen -W "" -- "$2") )
		return
		;;
	esac

	case "${COMP_WORDS[1]}" in
	list-namespaces|list-views)
		COMPREPLY=( $(compgen -W "${commands}" -- "$2") )
		return
		;;
	*)
		if [ ${COMP_CWORD} -eq 1 ]; then
			COMPREPLY=( $(compgen -W "VIEW list-namespaces list-views help version --namespace --read-only --help --version" -- "$2") )
			return
		fi
	esac
}

complete -F _cmu cmu
