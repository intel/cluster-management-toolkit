- hosts: "selection:!nas"
  name: "Setup CRI-O"
  vars:
    metadata:
      description: "Setup CRI-O"
      playbook_types:
      - "internal"
  gather_subset:
  - "!min"
  - "!all"
  - "distribution"
  become: true
  become_user: "root"
  tasks:
  - name: "Creating /usr/local/keyrings"
    ansible.builtin.file:
      path: "/usr/local/keyrings"
      state: "directory"
      mode: "0755"
    when: "ansible_os_family == 'Debian'"
  - name: "Creating temporary directory for CRI-O repository key"
    ansible.builtin.tempfile:
      state: "directory"
      suffix: "temp"
    register: "tempdir"
  - name: "Fetching CRI-O repository key"
    ansible.builtin.get_url:
      url: "https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/Debian_11/Release.key"
      dest: "{{ tempdir.path }}"
      mode: "0644"
      force: true
      use_proxy: "{{ use_proxy }}"
    environment:
      https_proxy: "{{ https_proxy }}"
    when: "ansible_os_family == 'Debian'"
  - name: "Dearmoring CRI-O key"  # noqa fqcn-builtins
    shell: |
      gpg --dearmor "{{ tempdir.path }}/Release.key"
  - name: "Copying dearmored CRI-O key to /usr/local/keyrings"
    ansible.builtin.copy:
      remote_src: true
      src: "{{ tempdir.path }}/Release.key.gpg"
      dest: "/usr/local/keyrings/cri-o-keyring.gpg"
      mode: "0644"
  - name: "Configuring package repository for CRI-O"
    ansible.builtin.template:
      src: "templates/etc/apt/sources.list.d/cri-o.list.j2"
      dest: "/etc/apt/sources.list.d/cri-o.list"
      mode: "0644"
    when: "ansible_os_family == 'Debian'"
  - name: "Configuring package repository proxy for CRI-O"
    ansible.builtin.template:
      src: "templates/etc/apt/apt.conf.d/01proxy-cri-o.j2"
      dest: "/etc/apt/apt.conf.d/01proxy-cri-o"
      mode: "0644"
    when: "(ansible_os_family == 'Debian') and (use_proxy == 'yes')"
  - name: "Pinning CRI-O repository"
    ansible.builtin.template:
      src: "templates/etc/apt/preferences.d/cri-o"
      dest: "/etc/apt/preferences.d/cri-o"
      mode: "0644"
  - name: "Updating package cache"
    ansible.builtin.apt:
      update_cache: true
      force_apt_get: true
    when: "ansible_os_family == 'Debian'"
  - name: "Installing cri-o"  # noqa package-latest
    ansible.builtin.apt:
      name: "cri-o"
      state: "latest"
      force_apt_get: true
    when: "ansible_os_family == 'Debian'"
  - name: "Installing cri-o-runc"  # noqa package-latest
    ansible.builtin.apt:
      name: "cri-o-runc"
      state: "latest"
      force_apt_get: true
    when: "ansible_os_family == 'Debian'"
  - name: "Configuring crictl"
    ansible.builtin.template:
      dest: "/etc/crictl.yaml"
      src: "templates/etc/crictl-cri-o.yaml.j2"
      mode: "0644"
      force: true
  - name: "Creating /etc/systemd/system/cri-o.service.d"
    ansible.builtin.file:
      path: "/etc/systemd/system/cri-o.service.d"
      state: "directory"
      mode: "0755"
  - name: "Creating /etc/systemd/system/cri-o.service.d/http-proxy.conf"
    ansible.builtin.template:
      dest: "/etc/systemd/system/cri-o.service.d/http-proxy.conf"
      src: "templates/etc/systemd/system/cri-o.service.d/http-proxy.conf.j2"
      mode: "0644"
      force: true
  - name: "Creating /etc/systemd/system/cri-o.service.d/ip-forward.conf"
    ansible.builtin.template:
      dest: "/etc/systemd/system/cri-o.service.d/ip-forward.conf"
      src: "templates/etc/systemd/system/cri-o.service.d/ip-forward.conf.j2"
      mode: "0644"
      force: true
  - name: "Removing files in /etc/cni/net.d that conflict with CNIs"
    ansible.builtin.file:
      path: "{{ item }}"
      state: "absent"
    with_items:
    - "/etc/cni/net.d/100-crio-bridge.conflist"
    - "/etc/cni/net.d/200-loopback.conflist"
  - name: "Ensure that br_netfilter is loaded on boot"
    ansible.builtin.lineinfile:
      path: "/etc/modules"
      line: "br_netfilter"
      insertafter: "EOF"
      state: "present"
  - name: "Load br_netfilter if it isn't already loaded"  # noqa fqcn-builtins
    shell: |
      modprobe br_netfilter
  - name: "Restarting cri-o"
    ansible.builtin.systemd:
      name: "crio"
      daemon_reload: true
      state: "restarted"
      enabled: true
