- hosts: "selection:!nas"
  name: "Setup CRI-O"
  vars:
    metadata:
      description: "Setup CRI-O"
      summary:
        "Created directories":
          - description: "/etc/apt/keyrings"
            conditions:
              - "Debian and derivatives"
          - description: "/etc/cri-o"
          - description: "/etc/systemd/system/containerd.service.d"
          - description: "/etc/systemd/system/kubelet.service.d"
        "Created files":
          - description: "/etc/apt/keyrings/cri-o-keyring.asc (GPG key for CRI-O APT repository)"
            conditions:
              - "Debian and derivatives"
          - description: "/etc/apt/sources.list.d/cri-o.list (APT repository for CRI-O)"
            conditions:
              - "Debian and derivatives"
          - description: "/etc/apt/apt.conf.d/01proxy-cri-o (Proxy settings for CRI-O APT repository)"
            conditions:
              - "Debian and derivatives"
          - description: "/etc/apt/preferences.d/cri-o (APT pinning for CRI-O APT repository)"
            conditions:
              - "Debian and derivatives"
          - description: "/etc/crictl.yaml.d/crio.conf.d/01-apparmor-profile.conf (Use default apparmor profile)"
          - description: "/etc/crictl.yaml.d/crio.conf.d/02-cgroup-manager.conf (Use systemd as cgroup manager)"
          - description: "/etc/systemd/system/cri-o.service.d/http-proxy.conf (proxy settings for CRI-O)"
          - description: "/etc/systemd/system/cri-o.service.d/ip-forward.conf (enable IP-forwarding when using CRI-O)"
          - description: "/etc/systemd/system/kubelet.service.d/cri-o-cri.conf (use CRI-O as CRI for Kubernetes)"
          - description: "/etc/zypp/repos.d/kubic.repo"
            conditions:
              - "SUSE and derivatives"
        "Downloaded files":
          - description: "https://download.opensuse.org/repositories/devel:/kubic/15.4/repodata/repomd.xml.key"
            conditions:
              - "Debian and derivatives"
              - "SUSE and derivatives"
          - description: "https://download.opensuse.org/repositories/security:/netfilter/openSUSE_Leap_15.4/repodata/repomd.xml.key"
            conditions:
              - "SUSE and derivatives"
        "Installed packages":
          - description: "conntrack-tools"
            conditions:
              - "SUSE and derivatives"
          - description: "cri-o"
            conditions:
              - "Debian and derivatives"
              - "SUSE and derivatives"
          - description: "cri-o-runc"
            conditions:
              - "Debian and derivatives"
        "Modified files":
          - description: "/etc/crictl.yaml (use CRI-O by default)"
          - description: "/etc/modules (Ensure that br_netfilter is loaded)"
        "Removed files":
          - description: "/etc/cni/net.d/100-crio-bridge.conflist (Conflicts with CNIs)"
          - description: "/etc/cni/net.d/200-loopback.conflist (Conflicts with CNIs)"
        "Other actions":
          - description: "Updates package cache"
            conditions:
              - "Debian and derivatives"
              - "SUSE and derivatives"
          - description: "modprobe br_netfilter"
        "Restarted services":
          - description: "crio"
          - description: "kubelet"
      playbook_types:
        - "internal"
  gather_subset:
    - "!min"
    - "!all"
    - "distribution"
  become: true
  become_user: "root"
  tasks:
    - name: "Creating /etc/apt/keyrings"
      ansible.builtin.file:
        path: "/etc/apt/keyrings"
        state: "directory"
        mode: "0755"
      when: "ansible_os_family == 'Debian'"
    - name: "Creating temporary directory for CRI-O repository key"
      ansible.builtin.tempfile:
        state: "directory"
        suffix: "temp"
      register: "tempdir"
    - name: "Fetching CRI-O repository key"
      ansible.builtin.get_url:
        url: "https://download.opensuse.org/repositories/devel:/kubic/15.4/repodata/repomd.xml.key"
        dest: "{{ tempdir.path }}/kubic.key"
        mode: "0644"
        force: true
        use_proxy: "{{ use_proxy }}"
      environment:
        https_proxy: "{{ https_proxy | default('') }}"
      when: "(ansible_os_family in ['Debian', 'Suse'])"
    - name: "Fetching security:netfilter repository key"
      ansible.builtin.get_url:
        url: "https://download.opensuse.org/repositories/security:/netfilter/openSUSE_Leap_15.4/repodata/repomd.xml.key"
        dest: "{{ tempdir.path }}/security_netfilter.key"
        mode: "0644"
        force: true
        use_proxy: "{{ use_proxy }}"
      environment:
        https_proxy: "{{ https_proxy | default('') }}"
      when: "ansible_os_family == 'Suse'"
    - name: "Copying CRI-O key to /etc/apt/keyrings"
      ansible.builtin.copy:
        remote_src: true
        src: "{{ tempdir.path }}/kubic.key.gpg"
        dest: "/etc/apt/keyrings/cri-o-keyring.asc"
        mode: "0644"
      when: "ansible_os_family == 'Debian'"
    - name: "Importing repository keys"  # noqa: command-instead-of-module
      ansible.builtin.shell: |
        rpm --import "{{ tempdir.path }}/kubic.key"
        rpm --import "{{ tempdir.path }}/security_netfilter.key"
      when: "ansible_os_family == 'Suse'"
      changed_when: true
    - name: "Configuring package repository for CRI-O"
      ansible.builtin.template:
        dest: "/etc/apt/sources.list.d/cri-o.list"
        src: "templates/etc/apt/sources.list.d/cri-o.list.j2"
        mode: "0644"
      when: "ansible_os_family == 'Debian'"
    - name: "Configuring package repository for CRI-O"
      ansible.builtin.template:
        dest: "/etc/zypp/repos.d/kubic.repo"
        src: "templates/etc/zypp/repos.d/kubic.repo.j2"
        mode: "0644"
      when: "ansible_os_family == 'Suse'"
    - name: "Configuring package repository for conntrack-tools"
      ansible.builtin.template:
        dest: "/etc/zypp/repos.d/security_netfilter.repo"
        src: "templates/etc/zypp/repos.d/security_netfilter.repo.j2"
        mode: "0644"
      when: "ansible_os_family == 'Suse'"
    - name: "Configuring package repository proxy for CRI-O"
      ansible.builtin.template:
        dest: "/etc/apt/apt.conf.d/01proxy-cri-o"
        src: "templates/etc/apt/apt.conf.d/01proxy-cri-o.j2"
        mode: "0644"
      when: "(ansible_os_family == 'Debian') and (use_proxy == 'yes')"
    - name: "Pinning CRI-O repository"
      ansible.builtin.template:
        dest: "/etc/apt/preferences.d/cri-o"
        src: "templates/etc/apt/preferences.d/cri-o"
        mode: "0644"
      when: "ansible_os_family == 'Debian'"
    - name: "Updating package cache"
      ansible.builtin.apt:
        update_cache: true
        force_apt_get: true
      when: "ansible_os_family == 'Debian'"
    - name: "Updating package cache"
      ansible.builtin.shell: |
        zypper --gpg-auto-import-keys refresh
      when: "ansible_os_family == 'Suse'"
      changed_when: true
    - name: "Installing cri-o"  # noqa package-latest
      ansible.builtin.apt:
        name: "cri-o"
        state: "latest"
        force_apt_get: true
      when: "ansible_os_family == 'Debian'"
    - name: "Installing cri-o and dependencies"
      ansible.builtin.shell: |
        zypper -n install conntrack-tools cni-plugins conmon libcontainers-common runc
        zypper -n install --repo kubic -y cri-o
      when: "ansible_os_family == 'Suse'"
      changed_when: true
    - name: "Configure cri-o to use default apparmor_profile"
      ansible.builtin.template:
        dest: "/etc/crio/crio.conf.d/01-apparmor-profile.conf"
        src: "templates/etc/crio/crio.conf.d/01-apparmor-profile.conf.j2"
        mode: "0644"
        force: true
    - name: "Configure cri-o to use systemd as cgroup manager"
      ansible.builtin.template:
        dest: "/etc/crio/crio.conf.d/02-cgroup-manager.conf"
        src: "templates/etc/crio/crio.conf.d/02-cgroup-manager.conf.j2"
        mode: "0644"
        force: true
    - name: "Installing cri-o-runc"  # noqa package-latest
      ansible.builtin.apt:
        name: "cri-o-runc"
        state: "latest"
        force_apt_get: true
      when: "ansible_os_family == 'Debian'"
    - name: "Configuring crictl"
      ansible.builtin.template:
        dest: "/etc/crictl.yaml"
        src: "templates/etc/crictl-cri-o.yaml.j2"
        mode: "0644"
        force: true
    - name: "Creating /etc/systemd/system/cri-o.service.d"
      ansible.builtin.file:
        path: "/etc/systemd/system/cri-o.service.d"
        state: "directory"
        mode: "0755"
    - name: "Creating /etc/systemd/system/cri-o.service.d/http-proxy.conf"
      ansible.builtin.template:
        dest: "/etc/systemd/system/cri-o.service.d/http-proxy.conf"
        src: "templates/etc/systemd/system/cri-o.service.d/http-proxy.conf.j2"
        mode: "0644"
        force: true
    - name: "Creating /etc/systemd/system/cri-o.service.d/ip-forward.conf"
      ansible.builtin.template:
        dest: "/etc/systemd/system/cri-o.service.d/ip-forward.conf"
        src: "templates/etc/systemd/system/cri-o.service.d/ip-forward.conf.j2"
        mode: "0644"
        force: true
    - name: "Removing files in /etc/cni/net.d that conflict with CNIs"
      ansible.builtin.file:
        path: "{{ item }}"
        state: "absent"
      with_items:
        - "/etc/cni/net.d/100-crio-bridge.conflist"
        - "/etc/cni/net.d/200-loopback.conflist"
    - name: "Ensure that br_netfilter is loaded on boot"
      ansible.builtin.lineinfile:
        path: "/etc/modules"
        line: "br_netfilter"
        insertafter: "EOF"
        state: "present"
        create: true
        mode: "0644"
    - name: "Load br_netfilter if it isn't already loaded"  # noqa no-changed-when
      ansible.builtin.shell: |
        modprobe br_netfilter
    - name: "Restarting cri-o"
      ansible.builtin.systemd:
        name: "crio"
        daemon_reload: true
        state: "restarted"
        enabled: true
