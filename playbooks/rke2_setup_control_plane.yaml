- hosts: "selection"
  name: "Setup a Kubernetes control plane using RKE2"
  vars:
    metadata:
      description: "Setup a Kubernetes control plane using RKE2"
      summary:
        "Downloaded files":
        - description: "https://get.rke2.io"
        "Enabled services":
        - description: "rke2-server"
        "Other actions":
        - description: "Configures and starts a Kubernetes control plane"
        "Started services":
        - description: "rke2-server"
      time_consumption: "Slow"
      playbook_types:
      - "internal"
      category: "Setup"
  gather_subset:
  - "!min"
  - "!all"
  - "distribution"
  become: true
  become_user: "root"
  tasks:
  - name: "Checking if cluster is already running"  # noqa fqcn-builtins
    shell: |
      lsof -i:6443 -sTCP:LISTEN -t > /dev/null
    register: "port_check"
    failed_when: false
    changed_when: false
  - name: "Creating temporary directory for RKE2 installer"
    ansible.builtin.tempfile:
      state: "directory"
      suffix: "temp"
    register: "tempdir"
    when: "port_check.rc == 1"
  - name: "Fetching RKE2 installer"
    ansible.builtin.get_url:
      url: "https://get.rke2.io"
      dest: "{{ tempdir.path }}/rke2-installer"
      mode: "0755"
      force: true
      use_proxy: "{{ use_proxy }}"
    environment:
      https_proxy: "{{ https_proxy | default('') }}"
    when: "port_check.rc == 1"
  - name: "Configuring proxy settings"
    ansible.builtin.template:
      src: "templates/etc/default/rke2-server.j2"
      dest: "/etc/default/rke2-server"
      mode: "0644"
    when: "port_check.rc == 1"
  - name: "Creating /etc/rancher/rke2"
    ansible.builtin.file:
      path: "/etc/rancher/rke2"
      state: "directory"
      mode: "0755"
  - name: "Configuring RKE2"
    ansible.builtin.template:
      dest: "/etc/rancher/rke2/config.yaml"
      src: "{{ configuration_path }}"
      mode: "0600"
      force: true
    when: "port_check.rc == 1"
  - name: "Running RKE2 installer"  # noqa fqcn-builtins no-changed-when
    shell: |
      {{ tempdir.path }}/rke2-installer
    when: "port_check.rc == 1"
    environment:
      https_proxy: "{{ https_proxy | default('') }}"
      no_proxy: "{{ no_proxy | default('') }}"
      INSTALL_RKE2_CHANNEL: "{{ requested_version }}"
  - name: "Enabling and starting RKE2 control plane service"
    ansible.builtin.systemd:
      name: "rke2-server"
      daemon_reload: true
      state: "restarted"
      enabled: true
    when: "port_check.rc == 1"
