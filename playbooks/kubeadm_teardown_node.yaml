- hosts: "selection:&nodes:!controlplane:!nas"
  name: "Remove Kubernetes node from cluster"
  vars:
    metadata:
      description: "Remove Kubernetes node from cluster"
      time_consumption: "Slow"
      summary:
        "Kubernetes actions":
        - description: "Resets the Kubernetes configuration"
        "Removed packages":
        - description: "kubeadm (purged)"
        - description: "kubectl (purged)"
        - description: "kubelet (purged)"
        - description: "kubernetes-cni (purged)"
      playbook_types:
      - "node"
      confirm: true
      allow_on_control_plane: "never"
      run_before:
      - "delete_node"
      run_after:
      - "teardown_cni"
      remove_from_groups:
      - "nodes"
      category: "Administration"
  gather_subset:
  - "!min"
  - "!all"
  - "distribution"
  become: true
  become_user: "root"
  tasks:
  - name: "Tearing down Kubernetes"  # noqa fqcn-builtins
    shell: |
      if kubeadm version > /dev/null 2> /dev/null; then
        kubeadm reset -f
      fi
    changed_when: false
  - name: "Unmarking packages as held"  # noqa fqcn-builtins
    shell: "apt-mark unhold kubeadm kubectl kubelet || true"
    when: "ansible_os_family == 'Debian'"
  - name: "Removing Kubernetes packages"
    ansible.builtin.apt:
      pkg:
      - "kubeadm"
      - "kubectl"
      - "kubelet"
      - "kubernetes-cni"
      force_apt_get: true
      state: "absent"
      purge: true
    when: "ansible_os_family == 'Debian'"
  - name: "Unmarking packages as held"  # noqa fqcn-builtins
    shell: |
      dnf versionlock delete kubeadm kubelet kubectl || true
    when: "ansible_os_family == 'RedHat'"
  - name: "Removing Kubernetes packages"
    ansible.builtin.dnf:
      pkg:
      - "kubeadm"
      - "kubectl"
      - "kubelet"
      - "kubernetes-cni"
      state: "absent"
    when: "ansible_os_family == 'RedHat'"
