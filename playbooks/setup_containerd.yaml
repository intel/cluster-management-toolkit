- hosts: "selection:!nas"
  name: "Setup Containerd"
  vars:
    metadata:
      description: "Setup Containerd"
      playbook_types:
      - "internal"
  gather_subset:
  - "!min"
  - "!all"
  - "distribution"
  become: true
  become_user: "root"
  tasks:
  - name: "Updating package cache"
    ansible.builtin.apt:
      update_cache: true
      force_apt_get: true
    when: "ansible_os_family == 'Debian'"
  - name: "Installing containerd"  # noqa package-latest
    ansible.builtin.apt:
      name: "containerd"
      state: "latest"
      force_apt_get: true
    when: "ansible_os_family == 'Debian'"
  - name: "Installing runc"  # noqa package-latest
    ansible.builtin.apt:
      name: "runc"
      state: "latest"
      force_apt_get: true
    when: "ansible_os_family == 'Debian'"
  - name: "Configuring crictl"
    ansible.builtin.template:
      dest: "/etc/crictl.yaml"
      src: "templates/etc/crictl-containerd.yaml.j2"
      mode: "0644"
      force: true
  - name: "Creating /etc/containerd"
    ansible.builtin.file:
      path: "/etc/containerd"
      state: "directory"
      mode: "0755"
  - name: "Configuring containerd"
    ansible.builtin.template:
      dest: "/etc/containerd/config.toml"
      src: "templates/etc/containerd/config.toml.j2"
      mode: "0644"
  - name: "Creating /etc/systemd/system/kubelet.service.d"
    ansible.builtin.file:
      path: "/etc/systemd/system/kubelet.service.d"
      state: "directory"
      mode: "0755"
  - name: "Configuring containerd-cri"
    ansible.builtin.template:
      dest: "/etc/systemd/system/kubelet.service.d/containerd-cri.conf"
      src: "templates/etc/systemd/system/kubelet.service.d/containerd-cri.conf.j2"
      mode: "0644"
      force: true
  - name: "Creating /etc/systemd/system/containerd.service.d"
    ansible.builtin.file:
      path: "/etc/systemd/system/containerd.service.d"
      state: "directory"
      mode: "0755"
  - name: "Creating /etc/systemd/system/containerd.service.d/http-proxy.conf"
    ansible.builtin.template:
      dest: "/etc/systemd/system/containerd.service.d/http-proxy.conf"
      src: "templates/etc/systemd/system/containerd.service.d/http-proxy.conf.j2"
      mode: "0644"
      force: true
  - name: "Creating /etc/systemd/system/containerd.service.d/ip-forward.conf"
    ansible.builtin.template:
      dest: "/etc/systemd/system/containerd.service.d/ip-forward.conf"
      src: "templates/etc/systemd/system/containerd.service.d/ip-forward.conf.j2"
      mode: "0644"
      force: true
  - name: "Restarting Containerd"
    ansible.builtin.systemd:
      name: "containerd"
      daemon_reload: true
      state: "restarted"
  - name: "Restarting Kubelet"
    ansible.builtin.systemd:
      name: "kubelet"
      daemon_reload: true
      state: "restarted"
    failed_when: false
