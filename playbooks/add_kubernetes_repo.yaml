- name: "Add Kubernetes repository"
  hosts: "selection"
  vars:
    metadata:
      description: "Add Kubernetes repository"
      category: "Administration"
      summary:
        "Created directories":
          - description: "/etc/apt/keyrings"
            conditions:
              - "Debian and derivatives"
        "Downloaded files":
          - description: "https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key (GPG key for new Kubernetes repo)"
            conditions:
              - "Debian and derivatives"
        "Created files":
          - description: "/etc/apt/keyrings/kubernetes-apt-keyring.asc"
            conditions:
              - "Debian and derivatives"
          - description: "/etc/apt/sources.list.d/kubernetes.list"
            conditions:
              - "Debian and derivatives"
          - description: "/etc/apt/apt.conf.d/01proxy-kubernetes"
            conditions:
              - "Debian and derivatives"
          - description: "/etc/yum.repos.d/kubernetes.repo"
            conditions:
              - "Red Hat and derivatives"
        "Installed packages":
          - description: "dnf-plugin-versionlock"
            conditions:
              - "Red Hat and derivatives"
        "Other actions":
          - description: "Updates package cache"
            conditions:
              - "Debian and derivatives"
              - "Red Hat and derivatives"
  gather_subset:
    - "!min"
    - "!all"
    - "distribution"
  become: true
  become_user: "root"
  tasks:
    - name: "Creating /etc/apt/keyrings"
      ansible.builtin.file:
        path: "/etc/apt/keyrings"
        state: "directory"
        mode: "0755"
      when: "ansible_os_family == 'Debian'"
    - name: "Creating temporary directory for repository keys"
      ansible.builtin.tempfile:
        state: "directory"
        suffix: "temp"
      register: "tempdir"
    - name: "Fetching Kubernetes repository key for pkgs.k8s.io"
      ansible.builtin.get_url:
        url: "https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key"
        dest: "/etc/apt/keyrings/kubernetes-apt-keyring.asc"
        mode: "0644"
        force: true
        use_proxy: "{{ use_proxy }}"
      environment:
        https_proxy: "{{ https_proxy | default('') }}"
      when: "ansible_os_family == 'Debian'"
    - name: "Configuring package repository for Kubernetes"
      ansible.builtin.template:
        src: "templates/etc/apt/sources.list.d/kubernetes.list.j2"
        dest: "/etc/apt/sources.list.d/kubernetes.list"
        mode: "0644"
      when: "ansible_os_family == 'Debian'"
    - name: "Configuring package repository proxy for Kubernetes"
      ansible.builtin.template:
        src: "templates/etc/apt/apt.conf.d/01proxy-kubernetes.j2"
        dest: "/etc/apt/apt.conf.d/01proxy-kubernetes"
        mode: "0644"
      when: "(ansible_os_family == 'Debian') and (use_proxy == 'yes')"
    - name: "Updating package cache"
      ansible.builtin.apt:
        update_cache: true
        force_apt_get: true
      when: "ansible_os_family == 'Debian'"
    - name: "Configuring package repository for Kubernetes"
      ansible.builtin.template:
        src: "templates/etc/yum.repos.d/kubernetes.repo.j2"
        dest: "/etc/yum.repos.d/kubernetes.repo"
        mode: "0644"
      when: "ansible_os_family == 'RedHat'"
    - name: "Installing dnf-plugin-versionlock"
      ansible.builtin.dnf:
        update_cache: true
        name: "dnf-plugin-versionlock"
      when: "ansible_os_family == 'RedHat'"
