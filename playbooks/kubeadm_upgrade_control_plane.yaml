- hosts: "selection"
  name: "Upgrade a Kubernetes control plane using kubeadm"
  vars:
    metadata:
      description: "Upgrade a Kubernetes control plane using kubeadm"
      time_consumption: "Slow"
      playbook_types:
      - "internal"
      category: "Administration"
  gather_subset:
  - "!min"
  - "!all"
  - "distribution"
  become: true
  become_user: "root"
  tasks:
  - name: "Updating package cache"
    ansible.builtin.apt:
      update_cache: true
      force_apt_get: true
    when: "ansible_os_family == 'Debian'"
  - name: "Unmarking packages as held"  # noqa fqcn-builtins
    shell: |
      apt-mark unhold kubeadm kubelet kubectl || true
    when: "ansible_os_family == 'Debian'"
  - name: "Remove deprecated config options"  # noqa fqcn-builtins risky-shell-pipe
    shell: |
      major_version=$(echo {{ requested_control_plane_k8s_version }} | sed -e 's/^\([0-9]*\)\.[0-9]*.*/\1/')
      minor_version=$(echo {{ requested_control_plane_k8s_version }} | sed -e 's/^[0-9]*\.\([0-9]*\).*/\1/')
      if [ $major_version -gt 0 ] && [ $minor_version -gt 23 ]; then
        sed -i -e 's/--network-plugin=cni//' /var/lib/kubelet/kubeadm-flags.env
      fi
    changed_when: false
  - name: "Installing new versions of kubeadm, kubelet and kubectl"
    ansible.builtin.apt:
      pkg:
      - "kubeadm={{ requested_control_plane_k8s_version }}"
      - "kubelet={{ requested_control_plane_k8s_version }}"
      - "kubectl={{ requested_control_plane_k8s_version }}"
      force_apt_get: true
    when: "ansible_os_family == 'Debian'"
  - name: "Marking packages as held"  # noqa fqcn-builtins
    shell: |
      apt-mark hold kubeadm kubelet kubectl || true
    when: "ansible_os_family == 'Debian'"
  - name: "Updating package cache"
    ansible.builtin.dnf:
      update_cache: true
    when: "ansible_os_family == 'RedHat'"
  - name: "Unmarking packages as held"  # noqa fqcn-builtins
    shell: |
      dnf versionlock delete kubeadm kubelet kubectl || true
    when: "ansible_os_family == 'RedHat'"
  - name: "Installing new versions of kubeadm, kubelet and kubectl"
    ansible.builtin.dnf:
      pkg:
      - "kubeadm-{{ requested_control_plane_k8s_version }}"
      - "kubelet-{{ requested_control_plane_k8s_version }}"
      - "kubectl-{{ requested_control_plane_k8s_version }}"
      disable_excludes: "kubernetes"
    when: "ansible_os_family == 'RedHat'"
  - name: "Marking packages as held"  # noqa fqcn-builtins
    shell: |
      dnf versionlock add kubeadm kubelet kubectl || true
    when: "ansible_os_family == 'RedHat'"
  - name: "Planning upgrade"  # noqa fqcn-builtins
    shell: |
      kubeadm upgrade plan
    changed_when: false
  - name: "Pulling Kubernetes images"  # noqa fqcn-builtins
    shell: |
      if [ -n "{{ https_proxy }}" ]; then
        export https_proxy={{ https_proxy }}
      else
        export https_proxy=
      fi
      kubeadm config images pull
    changed_when: false
  - name: "Upgrading control plane"  # noqa fqcn-builtins
    shell: |
      kubeadm upgrade apply -y {{ requested_control_plane_k8s_version.split("-")[0] }}
    changed_when: false
  - name: "Restarting kubelet"
    ansible.builtin.systemd:
      name: "kubelet"
      daemon_reload: true
      state: "restarted"
