- name: "Install custom packages"
  hosts: "selection:!nas"
  vars:
    metadata:
      description: "Install custom packages"
      time_consumption: "Potentially slow"
      summary:
        "Installed packages":
          - description: "{{ packages }}"
      playbook_types:
        - "inventory"
        - "node"
        - "internal"
      confirm: true
      query:
        string: "Packages to install (space separated)"
        function: "string"
        variable: "packages"
      category: "Administration"
  gather_subset:
    - "!min"
    - "!all"
    - "distribution"
  become: true
  become_user: "root"
  tasks:
    - name: "Updating package cache"
      ansible.builtin.apt:
        update_cache: true
        force_apt_get: true
      when: "ansible_os_family == 'Debian'"
    - name: "Unmarking packages as held"
      ansible.builtin.shell: |
        apt-mark unhold "{{ item }}" || true
      loop: "{{ held_packages }}"
      when: "ansible_os_family == 'Debian' and (vars['held_packages'] | length > 0)"
      changed_when: true
    - name: "Installing custom packages"
      ansible.builtin.apt:
        pkg: "{{ packages }}"
        force_apt_get: true
        # allow downgrading packages
        force: true
      when: "ansible_os_family == 'Debian' and (vars['packages'] | length > 0)"
    - name: "Marking packages as held"
      ansible.builtin.shell: |
        apt-mark hold "{{ item }}" || true
      loop: "{{ vars['held_packages'] }}"
      when: "ansible_os_family == 'Debian' and (vars['held_packages'] | length > 0)"
      changed_when: true
    - name: "Updating package cache"
      ansible.builtin.dnf:
        update_cache: true
      when: "ansible_os_family == 'RedHat'"
    - name: "Unmarking packages as held"
      ansible.builtin.shell: |
        dnf versionlock delete "{{ item }}" || true
      loop: "{{ held_packages }}"
      when: "ansible_os_family == 'RedHat' and (vars['held_packages'] | length > 0)"
      changed_when: true
    - name: "Installing custom packages"
      ansible.builtin.dnf:
        pkg: "{{ packages }}"
        allow_downgrade: true
        disable_excludes: "kubernetes"
      when: "ansible_os_family == 'RedHat' and (vars['packages'] | length > 0)"
    - name: "Marking packages as held"
      ansible.builtin.shell: |
        dnf versionlock add "{{ item }}" || true
      loop: "{{ vars['held_packages'] }}"
      when: "ansible_os_family == 'RedHat' and (vars['held_packages'] | length > 0)"
      changed_when: true
    - name: "Updating package cache"
      ansible.builtin.shell: |
        zypper --gpg-auto-import-keys refresh
      when: "ansible_os_family == 'Suse'"
      changed_when: true
    - name: "Unmarking packages as held"
      ansible.builtin.shell: |
        zypper removelock {{ held_packages | join(' ') }} || true
      when: "ansible_os_family == 'Suse' and (vars['held_packages'] | length > 0)"
      changed_when: true
    - name: "Installing custom packages"
      ansible.builtin.shell: |
        zypper -n install -f -y {{ packages | join(' ') }}
      when: "ansible_os_family == 'Suse' and (vars['packages'] | length > 0)"
      changed_when: true
    - name: "Marking packages as held"
      ansible.builtin.shell: |
        zypper addlock {{ held_packages | join(' ') }} || true
      when: "ansible_os_family == 'Suse' and (vars['held_packages'] | length > 0)"
      changed_when: true
