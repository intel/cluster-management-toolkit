- name: "Setup a Kubernetes control plane using kubeadm"
  hosts: "selection"
  vars:
    metadata:
      description: "Setup a Kubernetes control plane using kubeadm"
      summary:
        "Enabled services":
          - description: "kubelet"
        "Kubernetes actions":
          - description: "Creates a permanent join token"
        "Other actions":
          - description: "Configures and starts a Kubernetes control plane"
      time_consumption: "Slow"
      playbook_types:
        - "internal"
      category: "Setup"
  gather_subset:
    - "!min"
    - "!all"
    - "distribution"
  become: true
  become_user: "root"
  tasks:
    - name: "Checking if cluster is already running"
      ansible.builtin.shell: |
        lsof -i:6443 -sTCP:LISTEN -t > /dev/null
      register: "port_check"
      failed_when: false
      changed_when: false
    - name: "Creating temporary file for cluster configuration"
      ansible.builtin.tempfile:
        state: "file"
        suffix: "temp"
      register: "cluster_config"
    - name: "Creating cluster configuration"
      ansible.builtin.template:
        dest: "{{ cluster_config.path }}"
        src: "{{ configuration_path }}"
        mode: "0640"
    - name: "Selecting kubelet version"  # noqa risky-shell-pipe command-instead-of-module
      ansible.builtin.shell: |
        sed -i -e 's,KUBELET_VER=.*,KUBELET_VER={{ kubernetes_major_minor_version }},' /etc/sysconfig/kubelet
        sed -i -e 's,--container-runtime=\(docker\|remote\),,' /etc/sysconfig/kubelet
      when: "ansible_os_family == 'Suse'"
      changed_when: true
    - name: "Enabling kubelet"
      ansible.builtin.systemd:
        name: "kubelet"
        enabled: true
        state: "started"
      when: "ansible_os_family == 'RedHat'"
    - name: "Restarting kubelet"
      ansible.builtin.systemd:
        name: "kubelet"
        daemon_reload: true
        state: "restarted"
    - name: "The following cluster configuration will be used"
      ansible.builtin.command: "cat {{ cluster_config.path }}"
      changed_when: false
    - name: "Pulling Kubernetes images"
      ansible.builtin.shell: |
        if [ -n "{{ https_proxy }}" ]; then
          export https_proxy={{ https_proxy }}
        else
          export https_proxy=
        fi
        kubeadm config images pull --config {{ cluster_config.path }}
      when: "port_check.rc == 1"
      changed_when: true
    - name: "Initialising Kubernetes cluster"
      ansible.builtin.command: "kubeadm init --config {{ cluster_config.path }}"
      when: "port_check.rc == 1"
      changed_when: true
    - name: "Creating permanent join token"
      ansible.builtin.command: "kubeadm token create --kubeconfig /etc/kubernetes/admin.conf --ttl 0 --print-join-command"
      changed_when: true
    - name: "Remove temporary cluster configuration file"
      ansible.builtin.file:
        path: "{{ cluster_config.path }}"
        state: "absent"
      when: "cluster_config.path is defined"
