- hosts: "selection:!nodes:!controlplane:!nas"
  vars:
    metadata:
      description: "Setup Kubernetes node"
      time_consumption: "Slow"
      playbook_types:
      - "internal"
      category: "Setup"
  gather_subset:
  - "!min"
  - "!all"
  - "distribution"
  become: true
  become_user: "root"
  tasks:
  - name: "Updating package cache"
    ansible.builtin.apt: "update_cache=yes force_apt_get=yes"
    when: "ansible_os_family == 'Debian'"
  - name: "Gathering package facts"
    ansible.builtin.package_facts:
      manager: "apt"
    when: "ansible_os_family == 'Debian'"
  - name: "Unmarking packages as held"  # noqa fqcn-builtins
    shell: |
      apt-mark unhold kubeadm kubelet kubectl || true
    when: "ansible_os_family == 'Debian'"
  - name: "Installing Kubernetes packages"
    ansible.builtin.apt:
      pkg:
      - "kubelet={{ control_plane_k8s_version }}"
      - "kubeadm={{ control_plane_k8s_version }}"
      - "kubectl={{ control_plane_k8s_version }}"
      force_apt_get: true
    when: "ansible_os_family == 'Debian'"
  - name: "Marking packages as held"  # noqa fqcn-builtins
    shell: |
      apt-mark hold kubeadm kubelet kubectl || true
    when: "ansible_os_family == 'Debian'"
  - name: "Gathering package facts"
    ansible.builtin.package_facts:
      manager: "rpm"
    when: "ansible_os_family == 'RedHat'"
  - name: "Unmarking packages as held"  # noqa fqcn-builtins
    shell: |
      dnf versionlock delete kubeadm kubelet kubectl || true
    when: "ansible_os_family == 'RedHat'"
  - name: "Installing Kubernetes packages"
    ansible.builtin.dnf:
      pkg:
      - "kubelet-{{ control_plane_k8s_version }}"
      - "kubeadm-{{ control_plane_k8s_version }}"
      - "kubectl-{{ control_plane_k8s_version }}"
      disable_excludes: "kubernetes"
    when: "ansible_os_family == 'RedHat'"
  - name: "Marking packages as held"  # noqa fqcn-builtins
    shell: |
      dnf versionlock add kubeadm kubelet kubectl || true
    when: "ansible_os_family == 'RedHat'"
  - name: "Creating temporary file for node configuration"
    ansible.builtin.tempfile:
      state: file
      suffix: temp
    register: node_config
  - name: "Creating node configuration"
    ansible.builtin.template:
      dest: "{{ node_config.path }}"
      src: "templates/config/nodeconfig.yaml.j2"
      mode: "0640"
  - name: "Enabling kubelet"
    ansible.builtin.systemd:
      name: "kubelet"
      enabled: true
      state: "started"
    when: "ansible_os_family == 'RedHat'"
  - name: "Joining node to the cluster"  # noqa fqcn-builtins
    shell: |
      kubeadm join --config {{ node_config.path }}
    changed_when: false
